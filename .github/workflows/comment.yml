name: npm install runner

on:
  issue_comment:
    types: [created]
    
jobs:
  start:
    runs-on: ubuntu-20.04
    permissions:
      pull-requests: write
    outputs:
      interpretation: ${{ steps.interpret.outputs.result }}
    steps:
      - name: Debug
        uses: actions/github-script@v4
        with:
          script: console.log(context);
          
      - name: Interpret comment
        id: interpret
        uses: actions/github-script@v4
        with:
          result-encoding: string
          script: |
            // Make sure we're being spoken to
            if (context.payload.action !== 'created' || !('pull_request' in context.payload.issue) || context.payload.comment.body !== '/hi') {
                console.log('Not our command.');
                return;
            }
             
            // Check the permissions of the sender 
            const response = await github.repos.getCollaboratorPermissionLevel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                username: context.payload.sender.login
            });
            const permission = response.data.permission;
            if (permission !== 'admin' && permission !== 'write') {
                await github.reactions.createForIssueComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    comment_id: context.payload.comment.id,
                    content: 'confused'
                });
                await github.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: '> /hi\n\nThis command can only be used by users with write access to the repository.'
                });                    
                core.setFailed(`User ${context.payload.sender.login} has insufficient permissions`);
                return;
            }
            
            // Indicate that we're about to start work
            await github.reactions.createForIssueComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: context.payload.comment.id,
                content: 'rocket'
            });
            
            return 'request-valid';

  build:
    needs: start
    if: ${{ needs.start.outputs.interpretation == 'request-valid' }}
    runs-on: ubuntu-20.04
    permissions:
      actions: none
    steps:
      - name: Nothing
        run: false
        
  upload:
    needs: build
    if: ${{ needs.build.result == 'success' }}
    runs-on: ubuntu-20.04
    environment: node-cache upload
    permissions:
      pull-requests: write
    steps:
      - name: Nothing
        run: true

  fail:
    needs: [start, build, upload]
    if: ${{ failure() && needs.build.result != 'skipped' }}
    runs-on: ubuntu-20.04
    permissions:
      pull-requests: write
    steps:
      - name: Write failure comment
        uses: actions/github-script@v4
        with:
          script: |
            const { repo: { owner, repo } } = context;
            await github.reactions.createForIssueComment({
                owner, repo,
                comment_id: context.payload.comment.id,
                content: '-1'
            });
            await github.issues.createComment({
                owner, repo,
                issue_number: context.issue.number,
                body: `> /hi\n\nThe workflow failed.  See here for more information: https://github.com/${owner}/${repo}/actions/runs/${context.runId}`
            });                    
